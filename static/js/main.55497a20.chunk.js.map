{"version":3,"sources":["utils.js","TreeMap.js","mock.js","constants.js","App.js","serviceWorker.js","index.js"],"names":["format","d3","getColorSchema","data","arguments","length","undefined","map","d","name","validateDatasets","index","keys","children","getLayout","mapdata","configs","_configs$width","width","_configs$height","height","_configs$tileType","tileType","maxLayout","sortTransition","tm","tile","size","padding","round","root","sum","values","sort","a","b","value","maxIndex","k","Math","sqrt","sums","i","getMaxs","x","y","leaves","each","x0","x1","y0","y1","newLeaves","Array","keyList","_ref","id","item","itemIndex","indexOf","UID","UID_CONST_COUNT","Id","this","href","window","location","prototype","toString","TreeMap","props","animation","_props$configs","IDRef","useRef","frameRef","_useState","useState","_useState2","Object","slicedToArray","frameIndex","setFrameIndex","current","useEffect","st","localIndex","setInterval","clearInterval","useLayoutEffect","layout","color","ID","document","getElementById","leaf","transition","duration","attr","concat","call","select","depth","parent","text","tween","textContent","replace","t","update","selectAll","append","join","leafUid","clipUid","nodes","chart","react_default","createElement","style","parseInt","overflow","fontSize","floor","viewBox","MOCK_TREEMAP","tileTypes","useInitData","count","setCount","_useState3","_useState4","setAnimation","_useState5","_useState6","setMaxLayout","_useState7","_useState8","App","_useInitData","_useInitData2","setTileType","className","row","col","span","es_checkbox","checked","onChange","e","target","slider","marginTop","defaultValue","min","max","onAfterChange","es_radio","Group","Button","key","slice","src_TreeMap","Boolean","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.55497a20.chunk.js","sourcesContent":["import * as d3 from 'd3';\n\nconst format = d3.format(\",d\");\nconst getColorSchema = (data = []) => {\n  // 这里的 data 是处理过后的 children 内容\n  return d3.scaleOrdinal(\n    data.map(d => d.name), \n    d3.schemeCategory10.map(d => d3.interpolateRgb(d, \"white\")(0.5))\n  );\n};\nconst getMaxs = (data, index = -1) => {\n  const sums = data.keys.map((d, i) => d3.hierarchy(data).sum(d => d.values ? Math.round(d.values[i]) : 0).value);\n  return index === -1 ? d3.max(sums) : sums[index];\n}\nconst validateDatasets = (data, index) => {\n  return data.keys && data.children && data.keys.length >= index && index !== -1;\n}\n\nconst getLayout = (mapdata, index, configs) => {\n  const {width = 400, height = 300, tileType = 'treemapSlice', maxLayout, sortTransition} = configs;\n  const tm = d3.treemap()\n    .tile(d3[tileType])\n    .size([width, height])\n    .padding(d => d.height === 1 ? 1 : 0)\n    .round(true);\n  \n  const root = tm(d3.hierarchy(mapdata)\n    .sum(d => {\n      return d.values ? d.values[index] : 0\n    })\n    .sort((a, b) => {\n      return b.value - a.value\n    }));\n\n  return function() {\n    const maxIndex = maxLayout ? -1 : index;\n    const k = Math.sqrt(root.sum(d => d.values ? d.values[index] : 0).value / getMaxs(mapdata, maxIndex));\n    const x = (1 - k) / 2 * width;\n    const y = (1 - k) / 2 * height;\n\n    const leaves = tm.size([width * k, height * k])(root)\n      // eslint-disable-next-line no-sequences\n      .each(d => (d.x0 += x, d.x1 += x, d.y0 += y, d.y1 += y))\n      .leaves();\n\n    // 不固定排序布局\n    if (!mapdata.children[0].values || !sortTransition) return leaves;\n\n    const newLeaves = new Array(leaves.length);\n    const keyList = mapdata.children.map(({id}) => id);\n    // eslint-disable-next-line array-callback-return\n    leaves.map(item => {\n      const itemIndex = keyList.indexOf(item.data.id);\n      newLeaves[itemIndex] = item;\n    })\n\n    return newLeaves;\n  };\n}\n\n/**\n * 唯一 UID 生成器\n * @param {*} name \n */\nconst UID = (name, fixed = false) => {\n  let UID_CONST_COUNT = 0;\n  return new Id(\"O-\" + (name == null ? \"\" : name + \"-\") + (fixed ? 'const' : ++UID_CONST_COUNT));\n}\n\nfunction Id(id) {\n  this.id = id;\n  this.href = window.location.href + \"#\" + id;\n}\nId.prototype.toString = function() {\n  return \"url(\" + this.href + \")\";\n};\n\nexport {\n  UID,\n  format,\n  getColorSchema,\n  getMaxs,\n  validateDatasets,\n  getLayout,\n}","import React, { useRef, useLayoutEffect, useState, useEffect, memo, FunctionComponent } from 'react';\nimport * as d3 from 'd3';\n\nimport {\n  UID,\n  format,\n  getColorSchema,\n  validateDatasets,\n  getLayout,\n} from './utils.js';\n\n// interface TreeMapProps {\n//   index?: number,\n//   animation?: boolean,\n//   data?: {\n//     keys: [],\n//     children: []\n//   },\n//   configs: {\n//     width?: number,\n//     height?: number,\n//     tileType?: string,\n//     maxLayout?: boolean,\n//     sortTransition?: boolean,\n//   }\n// }\n\n// interface ChartProps {\n//   layout: any,\n//   color: any,\n//   ID: string\n// }\n\nconst chart = (props) => {\n  const { \n    layout,\n    color,\n    ID \n  } = props;\n  // svg 画布\n  if (document.getElementById(ID)) {\n    return update(d3.select(`#${ID}`).selectAll(\"g\"));\n  }\n\n  const leaf = d3.select(`#${ID}_svg`)\n    .append(\"g\")\n    .attr('id', ID)\n    .selectAll(\"g\")\n    .data(layout)\n    .join(\"g\")\n    .attr(\"transform\", (d) => `translate(${d.x0},${d.y0})`);\n\n  leaf.append(\"rect\")\n    .attr(\"id\", d => (d.leafUid = UID('leaf')).id)\n    .attr(\"fill\", d => { while (d.depth > 1) d = d.parent; return color(d.data.name); })\n    .attr(\"width\", d => d.x1 - d.x0)\n    .attr(\"height\", d => d.y1 - d.y0);\n\n  leaf.append(\"clipPath\")\n    .attr(\"id\", d => (d.clipUid = UID('clip')).id)\n    .append(\"use\")\n    .attr(\"xlink:href\", d => d.leafUid.href);\n\n  leaf.append(\"text\")\n    .attr(\"clip-path\", d => d.clipUid)\n    .selectAll(\"tspan\")\n    .data(d => [d.data.name, format(d.value)])\n    .join(\"tspan\")\n    .attr(\"x\", 3)\n    .attr(\"y\", (d, i, nodes) => `${(i === nodes.length - 1) * 0.3 + 1.1 + i * 0.9}em`)\n    .attr(\"fill-opacity\", (d, i, nodes) => i === nodes.length - 1 ? 0.7 : null)\n    .text(d => d);\n\n  leaf.append(\"title\")\n    .text(d => `${d.data.name} - PV ${d.value}`);\n\n  function update(leaf) {\n    leaf.data(layout)\n      .transition()\n      .duration(1000)\n      .attr(\"transform\", d => `translate(${d.x0},${d.y0})`)\n      .call(leaf => leaf.select(\"rect\")\n        .attr(\"fill\", d => { while (d.depth > 1) d = d.parent; return color(d.data.name); })\n        .attr(\"width\", d => d.x1 - d.x0)\n        .attr(\"height\", d => d.y1 - d.y0))\n      .call(leaf => leaf.select(\"text tspan:first-child\").text(d => d.data.name))\n      .call(leaf => leaf.select(\"text tspan:last-child\")\n        .tween(\"text\", function (d) {\n          const i = d3.interpolateNumber(\n            +this.textContent.replace(/,/g, \"\"), \n            d.value\n          );\n          \n          return function (t) { \n            this.textContent = format(i(t)); \n          };\n        }));\n  }\n}\n\nconst TreeMap = (props) => {\n  const { index, data, animation, configs = {} } = props;\n  const IDRef = useRef(UID('treemap').id);\n\n  const frameRef = useRef();\n  const [frameIndex, setFrameIndex] = useState(-1);\n  frameRef.current = frameIndex;\n\n  useEffect(() => {\n    // null\n    if (!validateDatasets(data, 0)) return ;\n    \n    let st, localIndex = index;\n    if (animation) {\n      st = setInterval(() => {\n        if (frameRef.current === data.keys.length-1) {\n          return clearInterval(st);\n        } else {\n          frameRef.current += 1;\n          setFrameIndex(frameRef.current);\n        }\n      }, 1500);\n      localIndex = 0;\n    }\n    \n    setFrameIndex(localIndex);\n    return () => clearInterval(st);\n  }, [index, animation, data]);\n\n  const {tileType, maxLayout, sortTransition} = configs;\n  useLayoutEffect(() => {\n    if (!validateDatasets(data, frameIndex)) return ;\n\n    const layout = getLayout(data, frameIndex, configs);\n    \n    chart({\n      layout,\n      color: getColorSchema(data.children),\n      ID: IDRef.current\n    });\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [tileType, maxLayout, sortTransition, frameIndex]);\n\n  return (\n    <svg\n      id={`${IDRef.current}_svg`}\n      style={{\n        width: `${parseInt(configs.width) ? configs.width : 400}`,\n        height: `${parseInt(configs.height) ? configs.height : 400}`,\n        overflow: \"hidden\",\n        fontSize: `${parseInt(configs.width) ? Math.floor(configs.width / 400)*5 : 10}px`\n      }}\n      viewBox={`0 0 ${parseInt(configs.width) ? configs.width : 400} ${parseInt(configs.height) ? configs.height : 400}`}\n    >\n    </svg>\n  )\n};\n\nexport default TreeMap;","const MOCK_TREEMAP = {\"keys\":[1790,1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990],\"children\":[{\"name\":\"South\",\"children\":[{\"name\":\"East South Central\",\"children\":[{\"name\":\"Alabama\",\"values\":[0.000001,1250,9046,127901,309527,590756,771623,964201,996992,1262505,1513401,1828697,2138093,2348174,2646248,2832961,3061743,3266740,3444165,3893888,4040587]},{\"name\":\"Kentucky\",\"values\":[73677,220955,406511,564317,687917,779828,982405,1155684,1321011,1648690,1858635,2147174,2289905,2416630,2614589,2845627,2944806,3038156,3218706,3660777,3685296]},{\"name\":\"Mississippi\",\"values\":[0.000001,7600,31306,75448,136621,375651,606526,791305,827922,1131597,1289600,1551270,1797114,1790618,2009821,2183796,2178914,2178141,2216912,2520638,2573216]},{\"name\":\"Tennessee\",\"values\":[35691,105602,261727,422823,681904,829210,1002717,1109801,1258520,1542359,1767518,2020616,2184789,2337885,2616556,2915841,3291718,3567089,3923687,4591120,4877185]}]},{\"name\":\"West South Central\",\"children\":[{\"name\":\"Arkansas\",\"values\":[0.000001,0.000001,1062,14273,30388,97574,209897,435450,484471,802525,1128211,1311564,1574449,1752204,1854482,1949387,1909511,1786272,1923295,2286435,2350725]},{\"name\":\"Louisiana\",\"values\":[0.000001,0.000001,76556,153407,215739,352411,517762,708002,726915,939946,1118588,1381625,1656388,1798509,2101593,2363880,2683516,3257022,3641306,4205900,4219973]},{\"name\":\"Oklahoma\",\"values\":[0.000001,0.000001,0.000001,0.000001,0.000001,0.000001,0.000001,0.000001,0.000001,0.000001,258657,790391,1657155,2028283,2396040,2336434,2233351,2328284,2559229,3025290,3145585]},{\"name\":\"Texas\",\"values\":[0.000001,0.000001,0.000001,0.000001,0.000001,0.000001,212592,604215,818579,1591749,2235527,3048710,3896542,4663228,5824715,6414824,7711194,9579677,11196730,14229191,16986510]}]},{\"name\":\"South Atlantic\",\"children\":[{\"name\":\"Delaware\",\"values\":[59096,64273,72674,72749,76748,78085,91532,112216,125015,146608,168493,184735,202322,223003,238380,266505,318085,446292,548104,594338,666168]},{\"name\":\"District of Columbia\",\"values\":[0.000001,8144,15471,23336,30261,33745,51687,75080,131700,177624,230392,278718,331069,437571,486869,663091,802178,763956,756510,638333,606900]},{\"name\":\"Florida\",\"values\":[0.000001,0.000001,0.000001,0.000001,34730,54477,87445,140424,187748,269493,391422,528542,752619,968470,1468211,1897414,2771305,4951560,6789443,9746324,12937926]},{\"name\":\"Georgia\",\"values\":[82548,162686,251407,340989,516823,691392,906185,1057286,1184109,1542180,1837353,2216331,2609121,2895832,2908506,3123723,3444578,3943116,4589575,5463105,6478216]},{\"name\":\"Maryland\",\"values\":[319728,341548,380546,407350,447040,470019,583034,687049,780894,934943,1042390,1188044,1295346,1449661,1631526,1821244,2343001,3100689,3922399,4216975,4781468]},{\"name\":\"North Carolina\",\"values\":[393751,478103,556526,638829,737987,753419,869039,992622,1071361,1399750,1617949,1893810,2206287,2559123,3170276,3571623,4061929,4556155,5082059,5881766,6628637]},{\"name\":\"South Carolina\",\"values\":[249073,345591,415115,502741,581185,594398,668507,703708,705606,995577,1151149,1340316,1515400,1683724,1738765,1899804,2117027,2382594,2590516,3121820,3486703]},{\"name\":\"Virginia\",\"values\":[691737,807557,877683,938261,1044054,1025227,1119348,1219630,1225163,1512565,1655980,1854184,2061612,2309187,2421851,2677773,3318680,3966949,4648494,5346818,6187358]},{\"name\":\"West Virginia\",\"values\":[55873,78592,105469,136808,176924,224537,302313,376688,442014,618457,762794,958800,1221119,1463701,1729205,1901974,2005552,1860421,1744237,1949644,1793477]}]}]},{\"name\":\"West\",\"children\":[{\"name\":\"Pacific\",\"children\":[{\"name\":\"Alaska\",\"values\":[0.000001,0.000001,0.000001,0.000001,0.000001,0.000001,0.000001,0.000001,0.000001,33426,32052,63592,64356,55036,59278,72524,128643,226167,300382,401851,550043]},{\"name\":\"California\",\"values\":[0.000001,0.000001,0.000001,0.000001,0.000001,0.000001,92597,379994,560247,864694,1213398,1485053,2377549,3426861,5677251,6907387,10586223,15717204,19953134,23667902,29760021]},{\"name\":\"Hawaii\",\"values\":[0.000001,0.000001,0.000001,0.000001,0.000001,0.000001,0.000001,0.000001,0.000001,0.000001,0.000001,154001,191874,255881,368300,422770,499794,632772,768561,964691,1108229]},{\"name\":\"Oregon\",\"values\":[0.000001,0.000001,0.000001,0.000001,0.000001,0.000001,12093,52465,90923,174768,317704,413536,672765,783389,953786,1089684,1521341,1768687,2091385,2633105,2842321]},{\"name\":\"Washington\",\"values\":[0.000001,0.000001,0.000001,0.000001,0.000001,0.000001,1201,11594,23955,75116,357232,518103,1141990,1356621,1563396,1736191,2378963,2853214,3409169,4132156,4866692]}]},{\"name\":\"Mountain\",\"children\":[{\"name\":\"Arizona\",\"values\":[0.000001,0.000001,0.000001,0.000001,0.000001,0.000001,0.000001,6482,9658,40440,88243,122931,204354,334162,435573,499261,749587,1302161,1770900,2718215,3665228]},{\"name\":\"Colorado\",\"values\":[0.000001,0.000001,0.000001,0.000001,0.000001,0.000001,0.000001,34277,39864,194327,413249,539700,799024,939629,1035791,1123296,1325089,1753947,2207259,2889964,3294394]},{\"name\":\"Idaho\",\"values\":[0.000001,0.000001,0.000001,0.000001,0.000001,0.000001,0.000001,0.000001,14999,32610,88548,161772,325594,431866,445032,524873,588637,667191,712567,943935,1006749]},{\"name\":\"Montana\",\"values\":[0.000001,0.000001,0.000001,0.000001,0.000001,0.000001,0.000001,0.000001,20595,39159,142924,243329,376053,548889,537606,559456,591024,674767,694409,786690,799065]},{\"name\":\"Nevada\",\"values\":[0.000001,0.000001,0.000001,0.000001,0.000001,0.000001,0.000001,6857,42941,62266,47355,42335,81875,77407,91058,110247,160083,285278,488738,800493,1201833]},{\"name\":\"New Mexico\",\"values\":[0.000001,0.000001,0.000001,0.000001,0.000001,0.000001,61547,87034,91874,119565,160282,195310,327301,360350,423317,531818,681187,951023,1016000,1302894,1515069]},{\"name\":\"Utah\",\"values\":[0.000001,0.000001,0.000001,0.000001,0.000001,0.000001,11380,40273,86336,143963,210779,276749,373351,449396,507847,550310,688862,890627,1059273,1461037,1722850]},{\"name\":\"Wyoming\",\"values\":[0.000001,0.000001,0.000001,0.000001,0.000001,0.000001,0.000001,0.000001,9118,20789,62555,92531,145965,194402,225565,250742,290529,330066,332416,469557,453588]}]}]},{\"name\":\"Northeast\",\"children\":[{\"name\":\"New England\",\"children\":[{\"name\":\"Connecticut\",\"values\":[237946,251002,261942,275248,297675,309978,370792,460147,537454,622700,746258,908420,1114756,1380631,1606903,1709242,2007280,2535234,3031709,3107576,3287116]},{\"name\":\"Maine\",\"values\":[96540,151719,228705,298335,399455,501793,583169,628279,626915,648936,661086,694466,742371,768014,797423,847226,913774,969265,992048,1124660,1227928]},{\"name\":\"Massachusetts\",\"values\":[378787,422845,472040,523287,610408,737699,994514,1231066,1457351,1783085,2238947,2805346,3366416,3852356,4249614,4316721,4690514,5148578,5689170,5737037,6016425]},{\"name\":\"New Hampshire\",\"values\":[141885,183858,214460,244161,269328,284574,317976,326073,318300,346991,376530,411588,430572,443083,465293,491524,533242,606921,737681,920610,1109252]},{\"name\":\"Rhode Island\",\"values\":[68825,69122,76931,83059,97199,108830,147545,174620,217353,276531,345506,428556,542610,604397,687497,713346,791896,859488,946725,947154,1003464]},{\"name\":\"Vermont\",\"values\":[85425,154465,217895,235981,280652,291948,314120,315098,330551,332286,332422,343641,355956,352428,359611,359231,377747,389881,444330,511456,562758]}]},{\"name\":\"Middle Atlantic\",\"children\":[{\"name\":\"New Jersey\",\"values\":[184139,211149,245562,277575,320823,373306,489555,672035,906096,1131116,1444933,1883669,2537167,3155900,4041334,4160165,4835329,6066782,7168164,7364823,7730188]},{\"name\":\"New York\",\"values\":[340120,589051,959049,1372812,1918608,2428921,3097394,3880735,4382759,5082871,6003174,7268894,9113614,10385227,12588066,13479142,14830192,16782304,18236967,17558072,17990455]},{\"name\":\"Pennsylvania\",\"values\":[434373,602365,810091,1049458,1348233,1724033,2311786,2906215,3521951,4282891,5258113,6302115,7665111,8720017,9631350,9900180,10498012,11319366,11793909,11863895,11881643]}]}]},{\"name\":\"Midwest\",\"children\":[{\"name\":\"East North Central\",\"children\":[{\"name\":\"Illinois\",\"values\":[0.000001,2458,12282,55211,157445,476183,851470,1711951,2539891,3077871,3826352,4821550,5638591,6485280,7630654,7897241,8712176,10081158,11113976,11426518,11430602]},{\"name\":\"Indiana\",\"values\":[0.000001,2632,24520,147178,343031,685866,988416,1350428,1680637,1978301,2192404,2516462,2700876,2930390,3238503,3427796,3934224,4662498,5193669,5490224,5544159]},{\"name\":\"Michigan\",\"values\":[0.000001,3757,4762,7452,28004,212267,397654,749113,1184059,1636937,2093890,2420982,2810173,3668412,4842325,5256106,6371766,7823194,8875083,9262078,9295297]},{\"name\":\"Ohio\",\"values\":[0.000001,42159,230760,581434,937903,1519467,1980329,2339511,2665260,3198062,3672329,4157545,4767121,5759394,6646697,6907612,7946627,9706397,10652017,10797630,10847115]},{\"name\":\"Wisconsin\",\"values\":[0.000001,0.000001,0.000001,1444,3635,30945,305391,775881,1054670,1315497,1693330,2069042,2333860,2632067,2939006,3137587,3434575,3951777,4417731,4705767,4891769]}]},{\"name\":\"West North Central\",\"children\":[{\"name\":\"Iowa\",\"values\":[0.000001,0.000001,0.000001,0.000001,0.000001,43112,192214,674913,1194020,1624615,1912297,2231853,2224771,2404021,2470939,2538268,2621073,2757537,2824376,2913808,2776755]},{\"name\":\"Kansas\",\"values\":[0.000001,0.000001,0.000001,0.000001,0.000001,0.000001,0.000001,107206,364399,996096,1428108,1470495,1690949,1769257,1880999,1801028,1905299,2178611,2246578,2363679,2477574]},{\"name\":\"Minnesota\",\"values\":[0.000001,0.000001,0.000001,0.000001,0.000001,0.000001,6077,172023,439706,780773,1310283,1751394,2075708,2387125,2563953,2792300,2982483,3413864,3804971,4075970,4375099]},{\"name\":\"Missouri\",\"values\":[0.000001,0.000001,19783,66586,140455,383702,682044,1182012,1721295,2168380,2679185,3106665,3293335,3404055,3629367,3784664,3954653,4319813,4676501,4916686,5117073]},{\"name\":\"Nebraska\",\"values\":[0.000001,0.000001,0.000001,0.000001,0.000001,0.000001,0.000001,28841,122993,452402,1062656,1066300,1192214,1296372,1377963,1315834,1325510,1411330,1483493,1569825,1578385]},{\"name\":\"North Dakota\",\"values\":[0.000001,0.000001,0.000001,0.000001,0.000001,0.000001,0.000001,0.000001,2405,36909,190983,319146,577056,646872,680845,641935,619636,632446,617761,652717,638800]},{\"name\":\"South Dakota\",\"values\":[0.000001,0.000001,0.000001,0.000001,0.000001,0.000001,0.000001,4837,11776,98268,348600,401570,583888,636547,692849,642961,652740,680514,665507,690768,696004]}]}]}]};\n\nexport {\n  MOCK_TREEMAP,\n}","/**\n * 可选布局类型\n */\nexport const tileTypes = ['treemapResquarify', 'treemapBinary', 'treemapDice', 'treemapSlice', 'treemapSliceDice', 'treemapSquarify'];","import React, {useState} from 'react';\nimport './App.css';\n\nimport {Checkbox, Slider, Radio, Col, Row} from 'antd';\nimport TreeMap from './TreeMap.js';\nimport { MOCK_TREEMAP } from './mock';\nimport { tileTypes } from './constants';\n\nconst useInitData = () => {\n  const [count, setCount] = useState(0);\n  const [animation, setAnimation] = useState(false);\n  const [maxLayout, setMaxLayout] = useState(false);\n  const [tileType, setTileType] = useState(tileTypes[0]);\n  const [width, height] = [600, 400];\n\n  return [\n    width,\n    height,\n    count, \n    setCount,\n    animation,\n    setAnimation,\n    maxLayout,\n    setMaxLayout,\n    tileType,\n    setTileType\n  ]\n}\n\nfunction App() {\n  const [\n    width,\n    height,\n    count, \n    setCount,\n    animation,\n    setAnimation,\n    maxLayout,\n    setMaxLayout,\n    tileType,\n    setTileType,\n  ] = useInitData();\n\n  return (\n    <div className=\"App\">\n      <h1>TreeMap <a href=\"https://github.com/hijiangtao/d3-treemap-with-react-demo\">GitHub</a></h1>\n      <Row>\n          <Col span={5}>\n            <Checkbox checked={animation} onChange={(e) => setAnimation(e.target.checked)}>逐帧动画</Checkbox>\n          </Col>\n          <Col span={5}>\n            <Checkbox checked={maxLayout} onChange={(e) => setMaxLayout(e.target.checked)}>最大化计算</Checkbox>\n          </Col>\n          <Col span={5}>\n            <Slider \n              style={{\n                marginTop: '6px',\n              }}\n              defaultValue={count}\n              min={0}\n              max={20}\n              onAfterChange={(e) => {\n                setAnimation(false);\n                setCount(e);\n              }}\n            />\n          </Col>\n          <span>布局类型</span>\n          <Col span={21}>\n            <Radio.Group size=\"small\" value={tileType} onChange={(e) => {setTileType(e.target.value)}}>\n              {tileTypes.map(item => (<Radio.Button value={item} key={item}>{item.slice(7)}</Radio.Button>))}\n            </Radio.Group>\n          </Col>\n      </Row>\n\n      <TreeMap \n        configs={{\n          width,\n          height,\n          tileType,\n          maxLayout,\n        }}\n        index={count}\n        animation={animation}\n        data={MOCK_TREEMAP} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}